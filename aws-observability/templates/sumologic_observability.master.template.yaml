AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "NOTE:- Please Check REGION before Deploying the template. Template to setup the AWS Observability Solution with all AWS, Lambda and Sumo Logic Resources installation."

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: "1. Sumo Logic Access Configuration (Required)"
        Parameters:
          - Section1aSumoLogicDeployment
          - Section1bSumoLogicAccessID
          - Section1cSumoLogicAccessKey
          - Section1dSumoLogicOrganizationId
          - Section1eSumoLogicResourceRemoveOnDeleteStack

      - Label:
          default: "2. AWS Resources Tag Configuration (Required)"
        Parameters:
          - Section2aTagAWSResourcesOptions
          - Section2bAWSResourcesList
          - Section2cAccountAlias
          - Section2dTagAWSResourcesFilterExpression

      - Label:
          default: "3. Sumo Logic AWS Observability Apps Configurations"
        Parameters:
          - Section3aInstallObservabilityApps

      - Label:
          default: "4. Sumo Logic AWS EC2 Meta Data Source Details"
        Parameters:
          - Section4aEC2CreateMetaDataSource

      - Label:
          default: "5. Sumo Logic AWS CloudWatch Metrics and Inventory Source Details"
        Parameters:
          - Section5aCreateMetricsSourcesOptions
          - Section5bMetricsNameSpaces

      - Label:
          default: "6. Sumo Logic AWS ALB Log Source Details"
        Parameters:
          - Section6aALBCreateLogSource
          - Section6bALBS3LogsBucketName
          - Section6cALBS3BucketPathExpression
          - Section6dALBLogsSourceUrl
          - Section6eAutoEnableS3LogsALBResourcesOptions
          - Section6fAutoEnableS3LogsFilterExpression

      - Label:
          default: "7. Sumo Logic AWS CloudTrail Source Details"
        Parameters:
          - Section7aCreateCloudTrailLogSource
          - Section7bCloudTrailLogsBucketName
          - Section7cCloudTrailBucketPathExpression
          - Section7dCloudTrailLogsSourceUrl

      - Label:
          default: "8. Sumo Logic AWS Lambda CloudWatch Logs Details"
        Parameters:
          - Section8aLambdaCreateCloudWatchLogsSource
          - Section8bLambdaCloudWatchLogsSourceUrl
          - Section8cAutoSubscribeLogGroupsLambdaOptions
          - Section8dAutoSubscribeLambdaLogGroupPattern

    ParameterLabels:
      Section1aSumoLogicDeployment:
        default: "Sumo Logic Deployment Name"
      Section1bSumoLogicAccessID:
        default: "Sumo Logic Access ID"
      Section1cSumoLogicAccessKey:
        default: "Sumo Logic Access Key"
      Section1dSumoLogicOrganizationId:
        default: "Sumo Logic Organization Id"
      Section1eSumoLogicResourceRemoveOnDeleteStack:
        default: "Delete Sumo Logic Resources when stack is deleted"

      Section2aTagAWSResourcesOptions:
        default: "Auto Enable Tagging of AWS Resources"
      Section2bAWSResourcesList:
        default: "Choose AWS Resources to Tag"
      Section2cAccountAlias:
        default: "Alias for AWS Account Identification"
      Section2dTagAWSResourcesFilterExpression:
        default: "Regular expression to Filter AWS Resources"

      Section3aInstallObservabilityApps:
        default: "Install AWS Observability Apps"

      Section4aEC2CreateMetaDataSource:
        default: "Create Sumo Logic AWS EC2 MetaData Source"

      Section5aCreateMetricsSourcesOptions:
        default: "Select the Sumo Logic Metrics Sources to create"
      Section5bMetricsNameSpaces:
        default: "Sumo Logic AWS Metrics Namespaces"

      Section6aALBCreateLogSource:
        default: "Create Sumo Logic ALB Logs Source"
      Section6bALBS3LogsBucketName:
        default: "Any Existing AWS S3 Bucket Name"
      Section6cALBS3BucketPathExpression:
        default: "Any Existing Bucket Path Expression for the ALB logs"
      Section6dALBLogsSourceUrl:
        default: "Existing Sumo Logic ALB Logs Source API URL"
      Section6eAutoEnableS3LogsALBResourcesOptions:
        default: "Enable ALB Access logging"
      Section6fAutoEnableS3LogsFilterExpression:
        default: "Regular expression to Filter AWS ALB Resources"

      Section7aCreateCloudTrailLogSource:
        default: "Create Sumo Logic CloudTrail Logs Source"
      Section7bCloudTrailLogsBucketName:
        default: "Any Existing AWS S3 Bucket Name"
      Section7cCloudTrailBucketPathExpression:
        default: "Any Existing Bucket Path Expression for the CloudTrail logs"
      Section7dCloudTrailLogsSourceUrl:
        default: "Existing Sumo Logic CloudTrail Logs Source API URL"

      Section8aLambdaCreateCloudWatchLogsSource:
        default: "Create Sumo Logic CloudWatch Logs Source"
      Section8bLambdaCloudWatchLogsSourceUrl:
        default: "Existing Sumo Logic Lambda CloudWatch Logs Source API URL"
      Section8cAutoSubscribeLogGroupsLambdaOptions:
        default: "Subscribe log groups to Sumo Logic Lambda Forwarder"
      Section8dAutoSubscribeLambdaLogGroupPattern:
        default: "Regex for Filtering lambda Log Groups"

Parameters:
  Section1aSumoLogicDeployment:
    Type: String
    AllowedValues:
      - au
      - ca
      - de
      - eu
      - jp
      - us2
      - us1
      - in
      - fed
    Description: "Enter au, ca, de, eu, jp, us2, in, fed or us1. Visit https://help.sumologic.com/APIs/General-API-Information/Sumo-Logic-Endpoints-and-Firewall-Security"
  Section1bSumoLogicAccessID:
    Type: String
    Description: "Sumo Logic Access ID. Visit https://help.sumologic.com/Manage/Security/Access-Keys#Create_an_access_key"
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access ID can not be empty."
  Section1cSumoLogicAccessKey:
    Type: String
    Description: "Sumo Logic Access Key."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access Key can not be empty."
    NoEcho: true
  Section1dSumoLogicOrganizationId:
    Description: "Appears on the Account Overview page that displays information about your Sumo Logic organization. Used for IAM Role in Sumo Logic AWS Sources. Visit https://help.sumologic.com/01Start-Here/05Customize-Your-Sumo-Logic-Experience/Preferences-Page"
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Organization Id can not be empty."
  Section1eSumoLogicResourceRemoveOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "To delete collectors, sources and apps when the stack is deleted, set this parameter to True. Default is True.
                  Deletes the resources created by the stack. Deletion of updated resources will be skipped."
    Type: String

  Section2aTagAWSResourcesOptions:
    Type: String
    Description: "New - Tags the new AWS Resources after creation. For New AWS Resources, Lambda function is invoked on CloudWatch Events.
                  Existing - Tags the AWS Resources with account - account alias tag.
                  Both - Tags New and Existing Resources.
                  None - Skip The AWS Resource Tagging."
    Default: 'Both'
    AllowedValues:
      - 'New'
      - 'Existing'
      - 'Both'
      - 'None'
  Section2bAWSResourcesList:
    Default: "ec2, alb, dynamodb, apigateway, rds, lambda"
    Description: "Provide Comma delimited list of the AWS Resource types to tag. Take input values from [ec2, alb, dynamodb, apigateway, rds, lambda]"
    Type: String
  Section2cAccountAlias:
    Type: String
    Description: "Provide an Alias for AWS account for identification in Sumo Logic Explorer View, metrics and logs. Please do not include special characters."
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: "Alias must only contain uppercase, lowercase letters, number and length less than or equal to 30 characters."
    MaxLength: 30
  Section2dTagAWSResourcesFilterExpression:
    Type: String
    Default: ".*"
    Description: "Provide regular expression for matching aws resources. For eg;- 'InstanceType': 't1.micro.*?'|'name': 'Test.*?']|'stageName': 'prod.*?'|'FunctionName': 'Test.*?'|TableName.*?|'LoadBalancerName': 'Test.*?'|'DBClusterIdentifier': 'Test.*?'|'DBInstanceIdentifier': 'Test.*?'"

  Section3aInstallObservabilityApps:
    Type: String
    Default: 'Yes'
    Description: "Yes - Installs Apps (EC2, Application Load Balancer, RDS, API Gateway, Lambda and Dynamo DB) for the Sumo Logic AWS Observability Solution. All the Apps are installed in the folder 'Sumo Logic AWS Observability Apps'.
                  No - Skips the installation of Apps."
    AllowedValues:
      - 'Yes'
      - 'No'

  Section4aEC2CreateMetaDataSource:
    Type: String
    Description: "Yes - Creates Sumo Logic MetaData Source. A common metadata source will be created with the region selected.
                  No - If you already have a MetaData Source configured."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'

  Section5aCreateMetricsSourcesOptions:
    Type: String
    Description: "CloudWatchMetrics - Creates a Sumo Logic CloudWatch Metrics Source which collects Metrics for multiple Namespaces from the region selected. Default Name - AccountAlias-aws-observability-cloudwatch-metrics-Region.
                  InventorySource - Creates a Sumo Logic Inventory Source which collects data for multiple Namespaces from the region selected. Default Name - AccountAlias-aws-observability-inventory-Region.
                  Both - Installs Both Sumo Logic CloudWatch Metrics and Inventory Source
                  None - Skips the Installation of both the Sumo Logic Sources"
    Default: 'Both'
    AllowedValues:
      - 'CloudWatchMetrics'
      - 'InventorySource'
      - 'Both'
      - 'None'
  Section5bMetricsNameSpaces:
    Default: "AWS/EC2, AWS/ApplicationELB, AWS/ApiGateway, AWS/DynamoDB, AWS/Lambda, AWS/RDS, AWS/EBS, AWS/ECS, AWS/ElastiCache, AWS/ELB, AWS/NetworkELB, AWS/Redshift, AWS/Kinesis, AWS/AutoScaling"
    Description: "Provide Comma delimited list of the namespaces if creating Metrics or Inventory source. Default will be AWS/EC2, AWS/ApplicationELB, AWS/ApiGateway, AWS/DynamoDB, AWS/Lambda, AWS/RDS, AWS/EBS, AWS/ECS, AWS/ElastiCache, AWS/ELB, AWS/NetworkELB, AWS/Redshift, AWS/Kinesis, AWS/AutoScaling."
    Type: String

  Section6aALBCreateLogSource:
    Type: String
    Description: "Yes - Creates a Sumo Logic ALB Log Source that collects ALB logs from an existing bucket or a new bucket. Default Name - AccountAlias-aws-observability-alb-Region-AccountId.
                  No - If you already have an ALB source collecting ALB logs into Sumo Logic."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section6bALBS3LogsBucketName:
    Type: String
    Description: "Provide any existing bucket name where you want to store ALB logs if you want to create the source. If kept empty, a new Bucket will be created in the region. Bucket will also be used for Enable ALB access logs option."
    Default: ""
  Section6cALBS3BucketPathExpression:
    Type: String
    Description: "Required in case the Existing Bucket already has ALB logs. Default path expression will be elasticloadbalancing/AWSLogs/* when Access logs enable option is selected."
    Default: "elasticloadbalancing/AWSLogs/*"
  Section6dALBLogsSourceUrl:
    Type: String
    Description: "Required when already collecting ALB logs in Sumo Logic. Provide the existing Sumo Logic ALB Source API URL. Account, region and namespace Fields will be added to the Source. For Source API URL, visit https://help.sumologic.com/03Send-Data/Sources/03Use-JSON-to-Configure-Sources/Local-Configuration-File-Management/View-or-Download-Source-JSON-Configuration"
    Default: ""
  Section6eAutoEnableS3LogsALBResourcesOptions:
    Type: String
    Description: "New - Automatically enables S3 logging for newly created ALB resources to collect logs for ALB resources. This does not affect ALB resources already collecting logs.
                  Existing - Automatically enables S3 logging for existing ALB resources to collect logs for ALB resources.
                  Both - Automatically enables S3 logging for new and existing ALB resources.
                  None - Skips Automatic S3 Logging enable for ALB resources."
    Default: 'Both'
    AllowedValues:
      - 'New'
      - 'Existing'
      - 'Both'
      - 'None'
  Section6fAutoEnableS3LogsFilterExpression:
    Type: String
    Default: ".*"
    Description: "Provide a regular expression for matching AWS resources. For example- 'LoadBalancerName': 'Test.*?'"

  Section7aCreateCloudTrailLogSource:
    Type: String
    Description: "Yes - Creates a Sumo Logic CloudTrail Log Source that collects CloudTrail logs from an existing bucket or a new bucket. Default Name - AccountAlias-aws-observability-cloudtrail-Region.
                  No - If you already have a CloudTrail Log source collecting CloudTrail logs into Sumo Logic."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section7bCloudTrailLogsBucketName:
    Type: String
    Description: "Provide an Existing bucket name that has CloudTrail logs if you want to create the source. If kept empty, a new Bucket will be created in the region."
    Default: ""
  Section7cCloudTrailBucketPathExpression:
    Type: String
    Description: "Required in case the Bucket already has CloudTrail logs. Default path expression will be AWSLogs/*/CloudTrail/*/* when the bucket is created."
    Default: "AWSLogs/*/CloudTrail/*/*"
  Section7dCloudTrailLogsSourceUrl:
    Type: String
    Description: "Required when already collecting CloudTrail logs in Sumo Logic. Provide the existing Sumo Logic CloudTrail Source API URL. Account Field will be added to the Source. For Source API URL, visit https://help.sumologic.com/03Send-Data/Sources/03Use-JSON-to-Configure-Sources/Local-Configuration-File-Management/View-or-Download-Source-JSON-Configuration"
    Default: ""

  Section8aLambdaCreateCloudWatchLogsSource:
    Type: String
    Description: "Yes - Creates the Sumo Logic CloudWatch Log Source that collects Lambda logs from AWS. Default Name - AccountAlias-aws-observability-cloudwatch-logs-Region.
                  No - If you already have a CloudWatch Log source collecting Lambda logs into Sumo Logic."
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  Section8bLambdaCloudWatchLogsSourceUrl:
    Type: String
    Description: "Required when already collecting Lambda CloudWatch logs in Sumo Logic. Provide the existing Sumo Logic Lambda CloudWatch Source API URL. Account, region and namespace Fields will be added to the Source. For Source API URL, visit https://help.sumologic.com/03Send-Data/Sources/03Use-JSON-to-Configure-Sources/Local-Configuration-File-Management/View-or-Download-Source-JSON-Configuration"
    Default: ""
  Section8cAutoSubscribeLogGroupsLambdaOptions:
    Type: String
    Description: "New - Automatically subscribes new log groups to lambda to send logs to Sumo Logic.
                  Existing - Automatically subscribes existing log groups to lambda to send logs to Sumo Logic.
                  Both - Automatically subscribes new and existing log groups.
                  None - Skips Automatic subscription."
    Default: 'Both'
    AllowedValues:
      - 'New'
      - 'Existing'
      - 'Both'
      - 'None'
  Section8dAutoSubscribeLambdaLogGroupPattern:
    Type: String
    Default: "lambda"
    Description: "Enter regex for matching logGroups. Regex will check for the name. Visit https://help.sumologic.com/03Send-Data/Collect-from-Other-Data-Sources/Auto-Subscribe_AWS_Log_Groups_to_a_Lambda_Function#Configuring_parameters"

Conditions:
  # Condition for Tagging Resources
  tag_existing_aws_resources: !Or
    - !Equals [ !Ref Section2aTagAWSResourcesOptions, 'Existing' ]
    - !Equals [ !Ref Section2aTagAWSResourcesOptions, 'Both' ]
  tag_new_aws_resources: !Or
    - !Equals [ !Ref Section2aTagAWSResourcesOptions, 'New' ]
    - !Equals [ !Ref Section2aTagAWSResourcesOptions, 'Both' ]

  # Condition for Metrics Source
  install_cloudwatch_metrics_source: !Or
    - !Equals [ !Ref Section5aCreateMetricsSourcesOptions, 'CloudWatchMetrics' ]
    - !Equals [ !Ref Section5aCreateMetricsSourcesOptions, 'Both' ]
  install_inventory_source: !Or
    - !Equals [ !Ref Section5aCreateMetricsSourcesOptions, 'InventorySource' ]
    - !Equals [ !Ref Section5aCreateMetricsSourcesOptions, 'Both' ]

  # Conditions for Bucket
  create_alb_bucket: !And
    - !Equals [ !Ref Section6aALBCreateLogSource, 'Yes' ]
    - !Equals [ !Ref Section6bALBS3LogsBucketName, '' ]

  create_cloudtrail_bucket: !And
    - !Equals [ !Ref Section7aCreateCloudTrailLogSource, 'Yes' ]
    - !Equals [ !Ref Section7bCloudTrailLogsBucketName, '' ]

  # FER Condition
  create_cloudtrail_source: !Equals [ !Ref Section7aCreateCloudTrailLogSource, 'Yes' ]

  # Condition for S3 Logging enable
  is_bucket_available: !Or
    - !Condition create_alb_bucket
    - !Not [!Equals [ !Ref Section6bALBS3LogsBucketName, '' ]]

  auto_enable_s3_logs: !And
    - !Not [!Equals [ !Ref Section6eAutoEnableS3LogsALBResourcesOptions, 'None' ]]
    - !Condition is_bucket_available

  # Condition for Auto Subscribe Lambda
  auto_subscribe_exisitng_lambda_log_groups: !Or
    - !Equals [ !Ref Section8cAutoSubscribeLogGroupsLambdaOptions, 'Existing' ]
    - !Equals [ !Ref Section8cAutoSubscribeLogGroupsLambdaOptions, 'Both' ]
  auto_subscribe_new_lambda_log_groups: !Or
    - !Equals [ !Ref Section8cAutoSubscribeLogGroupsLambdaOptions, 'New' ]
    - !Equals [ !Ref Section8cAutoSubscribeLogGroupsLambdaOptions, 'Both' ]
  auto_subscribe_lambda_log_groups: !And
    - !Equals [ !Ref Section8aLambdaCreateCloudWatchLogsSource, 'Yes' ]
    - !Condition auto_subscribe_new_lambda_log_groups

  # Condition for Stacks creation. Calling Nested Stack EveryTime to create FER and Metric Rule. If already present, marked as duplicate in Resource.
  install_overview_dashboards: !Equals [ !Ref Section3aInstallObservabilityApps, 'Yes' ]

Mappings:
  RegionMap:
    us-east-1:
      bucketname: appdevzipfiles-us-east-1
    us-east-2:
      bucketname: appdevzipfiles-us-east-2
    us-west-1:
      bucketname: appdevzipfiles-us-west-1
    us-west-2:
      bucketname: appdevzipfiles-us-west-2
    ap-south-1:
      bucketname: appdevzipfiles-ap-south-1
    ap-northeast-2:
      bucketname: appdevzipfiles-ap-northeast-2
    ap-southeast-1:
      bucketname: appdevzipfiles-ap-southeast-1
    ap-southeast-2:
      bucketname: appdevzipfiles-ap-southeast-2
    ap-northeast-1:
      bucketname: appdevzipfiles-ap-northeast-1
    ca-central-1:
      bucketname: appdevzipfiles-ca-central-1
    eu-central-1:
      bucketname: appdevzipfiles-eu-central-1
    eu-west-1:
      bucketname: appdevzipfiles-eu-west-1
    eu-west-2:
      bucketname: appdevzipfiles-eu-west-2
    eu-west-3:
      bucketname: appdevzipfiles-eu-west-3
    eu-north-1:
      bucketname: appdevzipfiles-eu-north-1s
    sa-east-1:
      bucketname: appdevzipfiles-sa-east-1
    ap-east-1:
      bucketname: appdevzipfiles-ap-east-1s
    af-south-1:
      bucketname: appdevzipfiles-af-south-1s
    eu-south-1:
      bucketname: appdevzipfiles-eu-south-1
    me-south-1:
      bucketname: appdevzipfiles-me-south-1s

Resources:

  WaitHandle:
    Type: "AWS::CloudFormation::WaitConditionHandle"

  CreateCommonResources:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability/apps/common/resources.template.yaml"
      Parameters:
        SumoLogicDeployment: !Ref Section1aSumoLogicDeployment
        SumoLogicAccessID: !Ref Section1bSumoLogicAccessID
        SumoLogicAccessKey: !Ref Section1cSumoLogicAccessKey
        SumoLogicOrganizationId: !Ref Section1dSumoLogicOrganizationId
        RemoveSumoLogicResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        AccountAlias: !Ref Section2cAccountAlias
        CollectorName: "aws-observability-collector"
        CreateMetaDataSource: !Ref Section4aEC2CreateMetaDataSource
        MetaDataSourceName: !Sub "${Section2cAccountAlias}-ec2-metaData-${AWS::Region}"
        CreateCloudWatchMetricsSource: !If [install_cloudwatch_metrics_source, "Yes", "No"]
        CloudWatchMetricsSourceName: !Sub "${Section2cAccountAlias}-cloudwatch-metrics-${AWS::Region}"
        CloudWatchMetricsNameSpaces: !Ref Section5bMetricsNameSpaces
        CreateALBLogSource: !Ref Section6aALBCreateLogSource
        CreateALBS3Bucket: !If [create_alb_bucket, "Yes", "No"]
        ALBS3LogsBucketName: !Ref Section6bALBS3LogsBucketName
        ALBS3BucketPathExpression: !If [auto_enable_s3_logs, !Sub "elasticloadbalancing/AWSLogs/${AWS::AccountId}/*/${AWS::Region}/*", !Ref Section6cALBS3BucketPathExpression]
        ALBLogsSourceName: !Sub "${Section2cAccountAlias}-alb-logs-${AWS::Region}"
        CreateCloudTrailLogSource: !Ref Section7aCreateCloudTrailLogSource
        CreateCloudTrailBucket: !If [create_cloudtrail_bucket, "Yes", "No"]
        CloudTrailLogsBucketName: !Ref Section7bCloudTrailLogsBucketName
        CloudTrailBucketPathExpression: !If [create_cloudtrail_bucket, !Sub "AWSLogs/${AWS::AccountId}/CloudTrail/${AWS::Region}/*", !Ref Section7cCloudTrailBucketPathExpression]
        CloudTrailLogsSourceName: !Sub "${Section2cAccountAlias}-cloudtrail-logs-${AWS::Region}"
        CreateCloudWatchLogSource: !Ref Section8aLambdaCreateCloudWatchLogsSource
        CloudWatchLogsSourceName: !Sub "${Section2cAccountAlias}-cloudwatch-logs-${AWS::Region}"
        CreateAwsInventorySource: !If [install_inventory_source, "Yes", "No"]
        AwsInventorySourceName: !Sub "${Section2cAccountAlias}-inventory-${AWS::Region}"
        AwsInventoryNamespaces: !Ref Section5bMetricsNameSpaces

  ConditionGeneratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      InlineCode: |
        import os
        import cfnresponse

        def handler(event, context):
          values = os.environ['Section2bAWSResourcesList']
          response_value = {}
          if values:
              response_value["tag_alb"] = "Yes" if "alb" in values else "No"
              response_value["tag_ec2"] = "Yes" if "ec2" in values else "No"
              response_value["tag_rds"] = "Yes" if "rds" in values else "No"
              response_value["tag_dynamo"] = "Yes" if "dynamodb" in values else "No"
              response_value["tag_apigateway"] = "Yes" if "apigateway" in values else "No"
              response_value["tag_lambda"] = "Yes" if "lambda" in values else "No"

          cfnresponse.send(event, context, cfnresponse.SUCCESS, response_value, "ConditionCheck")
      Handler: index.handler
      Runtime: python3.6
      Role: !GetAtt CreateCommonResources.Outputs.LambdaRoleARN
      Environment:
        Variables:
          Section2bAWSResourcesList: !Ref Section2bAWSResourcesList

  Primerinvoke:
    Type: AWS::CloudFormation::CustomResource
    Version: "1.0"
    Properties:
      ServiceToken: !GetAtt ConditionGeneratorFunction.Arn

  sumoOverview:
    Type: Custom::App
    Condition: install_overview_dashboards
    Properties:
      ServiceToken: !GetAtt CreateCommonResources.Outputs.LambdaHelperARN
      Region: !Ref "AWS::Region"
      AppName: "AWS Observability Overview App"
      Version: "1"
      FolderName: "Sumo Logic AWS Observability Apps "
      RemoveOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
      SumoAccessID: !Ref Section1bSumoLogicAccessID
      SumoAccessKey: !Ref Section1cSumoLogicAccessKey
      SumoDeployment: !Ref Section1aSumoLogicDeployment

  AutoEnableTaggingNewAWSResources:
    Type: AWS::CloudFormation::Stack
    Condition: tag_new_aws_resources
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability/apps/AutoTagAWSResources/auto_tag_resources.template.yaml"
      Parameters:
        AccountAlias: !Ref Section2cAccountAlias
        AddTagsForALBResources: !If [tag_new_aws_resources, !GetAtt Primerinvoke.tag_alb, "No"]
        AddTagsForAPIGatewayResources: !If [tag_new_aws_resources, !GetAtt Primerinvoke.tag_apigateway, "No"]
        AddTagsForRDSResources: !If [tag_new_aws_resources, !GetAtt Primerinvoke.tag_rds, "No"]
        AddTagsForEC2MetricsResources: !If [tag_new_aws_resources, !GetAtt Primerinvoke.tag_ec2, "No"]
        AddTagsForLambdaResources: !If [tag_new_aws_resources, !GetAtt Primerinvoke.tag_lambda, "No"]
        AddTagsForDynamoDBResources: !If [tag_new_aws_resources, !GetAtt Primerinvoke.tag_dynamo, "No"]
        FilterExpression: !Ref Section2dTagAWSResourcesFilterExpression

  AutoEnableS3LogsAlbAWSResources:
    Type: AWS::CloudFormation::Stack
    Condition: auto_enable_s3_logs
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability/apps/AutoEnableS3LogsAlb/auto_enable_s3_alb.template.yaml"
      Parameters:
        BucketName: !If [create_alb_bucket, !GetAtt CreateCommonResources.Outputs.BucketName, !Ref Section6bALBS3LogsBucketName]
        BucketPrefix: "elasticloadbalancing"
        EnableLogging: "ALB"
        TaggingResourceOptions: !Ref Section6eAutoEnableS3LogsALBResourcesOptions
        FilterExpression: !Ref Section6fAutoEnableS3LogsFilterExpression
        RemoveOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        ParentStackLambdaARN: !GetAtt CreateCommonResources.Outputs.LambdaHelperARN

  AutoSubscribeLambdaLogGroupsAWSResources:
    Type: AWS::Serverless::Application
    Condition: auto_subscribe_lambda_log_groups
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:956882708938:applications/sumologic-loggroup-connector
        SemanticVersion: 1.0.2
      Parameters:
        LambdaARN: !GetAtt CreateCommonResources.Outputs.CloudWatchLambdaARN
        LogGroupPattern: !Ref Section8dAutoSubscribeLambdaLogGroupPattern
        UseExistingLogs: !If [auto_subscribe_exisitng_lambda_log_groups, "true", "false"]

  sumoEC2MetricsAppStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability/apps/ec2metrics/ec2_metrics_app.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aTagExistingAWSResources: !If [tag_existing_aws_resources, !GetAtt Primerinvoke.tag_ec2, "No"]
        Section2bAccountAlias: !Ref Section2cAccountAlias
        Section2cFilterExpression: !Ref Section2dTagAWSResourcesFilterExpression
        Section3aInstallApp: !Ref Section3aInstallObservabilityApps
        Section4aCreateMetaDataSource: "No"
        Section5aParentStackLambdaARN: !GetAtt CreateCommonResources.Outputs.LambdaHelperARN

  ALBWaitHandle:
    DependsOn: sumoEC2MetricsAppStack
    Type: "AWS::CloudFormation::WaitConditionHandle"

  ALBWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref ALBWaitHandle
      Timeout: "2"
      Count: 0

  sumoAlbMetricsAppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: ALBWaitCondition
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability/apps/alb/alb_app.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aTagExistingAWSResources: !If [tag_existing_aws_resources, !GetAtt Primerinvoke.tag_alb, "No"]
        Section2bAccountAlias: !Ref Section2cAccountAlias
        Section2cFilterExpression: !Ref Section2dTagAWSResourcesFilterExpression
        Section3aInstallApp: !Ref Section3aInstallObservabilityApps
        Section4aCreateCloudWatchMetricsSource: "No"
        Section5aCreateS3Bucket: "No"
        Section5cCreateALBLogSource: "No"
        Section5fALBLogsAPIUrl: !Ref Section6dALBLogsSourceUrl
        Section6aParentStackLambdaARN: !GetAtt CreateCommonResources.Outputs.LambdaHelperARN

  DynamoDBWaitHandle:
    DependsOn: sumoAlbMetricsAppStack
    Type: "AWS::CloudFormation::WaitConditionHandle"

  DynamoDBWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref DynamoDBWaitHandle
      Timeout: "2"
      Count: 0

  sumoDynamoDBMetricsAppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: DynamoDBWaitCondition
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability/apps/dynamodb/dynamodb_app.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aTagExistingAWSResources: !If [tag_existing_aws_resources, !GetAtt Primerinvoke.tag_dynamo, "No"]
        Section2bAccountAlias: !Ref Section2cAccountAlias
        Section2cFilterExpression: !Ref Section2dTagAWSResourcesFilterExpression
        Section3aInstallApp: !Ref Section3aInstallObservabilityApps
        Section4aCreateCloudWatchMetricsSource: "No"
        Section5aCreateCloudTrailBucket: "No"
        Section5cCreateCloudTrailLogSource: "No"
        Section6aParentStackLambdaARN: !GetAtt CreateCommonResources.Outputs.LambdaHelperARN

  RDSWaitHandle:
    DependsOn: sumoDynamoDBMetricsAppStack
    Type: "AWS::CloudFormation::WaitConditionHandle"

  RDSWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref RDSWaitHandle
      Timeout: "2"
      Count: 0

  sumoRdsMetricsAppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: RDSWaitCondition
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability/apps/rds/rds_app.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aTagExistingAWSResources: !If [tag_existing_aws_resources, !GetAtt Primerinvoke.tag_rds, "No"]
        Section2bAccountAlias: !Ref Section2cAccountAlias
        Section2cFilterExpression: !Ref Section2dTagAWSResourcesFilterExpression
        Section3aInstallApp: !Ref Section3aInstallObservabilityApps
        Section4aCreateCloudWatchMetricsSource: "No"
        Section5aCreateCloudTrailBucket: "No"
        Section5cCreateCloudTrailLogSource: "No"
        Section6aParentStackLambdaARN: !GetAtt CreateCommonResources.Outputs.LambdaHelperARN

  ApiWaitHandle:
    DependsOn: sumoRdsMetricsAppStack
    Type: "AWS::CloudFormation::WaitConditionHandle"

  ApiWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref ApiWaitHandle
      Timeout: "2"
      Count: 0

  sumoApiGatewayMetricsAppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: ApiWaitCondition
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability/apps/apigateway/api_gateway_app.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aTagExistingAWSResources: !If [tag_existing_aws_resources, !GetAtt Primerinvoke.tag_apigateway, "No"]
        Section2bAccountAlias: !Ref Section2cAccountAlias
        Section2cFilterExpression: !Ref Section2dTagAWSResourcesFilterExpression
        Section3aInstallApp: !Ref Section3aInstallObservabilityApps
        Section4aCreateCloudWatchMetricsSource: "No"
        Section5aCreateCloudTrailBucket: "No"
        Section5cCreateCloudTrailLogSource: "No"
        Section6aParentStackLambdaARN: !GetAtt CreateCommonResources.Outputs.LambdaHelperARN

  AnamolyWaitHandle:
    DependsOn: sumoApiGatewayMetricsAppStack
    Type: "AWS::CloudFormation::WaitConditionHandle"

  AnamolyWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref AnamolyWaitHandle
      Timeout: "2"
      Count: 0

  AnamolyAppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: AnamolyWaitCondition
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability/apps/anomaly/anomaly.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aInstallApp: !Ref Section3aInstallObservabilityApps
        Section3aCreateAwsInventorySource: "No"
        Section4aParentStackLambdaARN: !GetAtt CreateCommonResources.Outputs.LambdaHelperARN

  LambdaWaitHandle:
    DependsOn: AnamolyAppStack
    Type: "AWS::CloudFormation::WaitConditionHandle"

  LambdaWaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref LambdaWaitHandle
      Timeout: "2"
      Count: 0

  sumoLambdaMetricsAppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: LambdaWaitCondition
    Properties:
      TemplateURL: !Join
        - ""
        - - "https://"
          - !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
          - ".s3.amazonaws.com/sumologic-aws-observability/apps/lambda/lambda_app.template.yaml"
      Parameters:
        Section1aSumoDeployment: !Ref Section1aSumoLogicDeployment
        Section1bSumoAccessID: !Ref Section1bSumoLogicAccessID
        Section1cSumoAccessKey: !Ref Section1cSumoLogicAccessKey
        Section1dSumoOrganizationId: !Ref Section1dSumoLogicOrganizationId
        Section1eRemoveSumoResourcesOnDeleteStack: !Ref Section1eSumoLogicResourceRemoveOnDeleteStack
        Section2aTagExistingAWSResources: !If [tag_existing_aws_resources, !GetAtt Primerinvoke.tag_lambda, "No"]
        Section2bAccountAlias: !Ref Section2cAccountAlias
        Section2cFilterExpression: !Ref Section2dTagAWSResourcesFilterExpression
        Section3aInstallApp: !Ref Section3aInstallObservabilityApps
        Section4aCreateCloudWatchMetricsSource: "No"
        Section5aCreateCloudTrailBucket: "No"
        Section5cCreateCloudTrailLogSource: "No"
        Section5eCloudTrailLogsSourceName: !If [create_cloudtrail_source, "*cloudtrail-logs*", ""]
        Section5fCloudTrailLogsAPIUrl: !Ref Section7dCloudTrailLogsSourceUrl
        Section6aCreateCloudWatchLogSource: "No"
        Section6cCloudWatchLogsAPIUrl: !Ref Section8bLambdaCloudWatchLogsSourceUrl
        Section7aParentStackLambdaARN: !GetAtt CreateCommonResources.Outputs.LambdaHelperARN
